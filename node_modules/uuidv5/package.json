{
  "_from": "uuidv5@^1.0.0",
  "_id": "uuidv5@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-r5jpvvy0YsCrbHUu3QgstS+1MKA=",
  "_location": "/uuidv5",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "uuidv5",
    "fetchSpec": "^1.0.0",
    "name": "uuidv5",
    "raw": "uuidv5@^1.0.0",
    "rawSpec": "^1.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/uuidv5/-/uuidv5-1.0.0.tgz",
  "_shasum": "af98e9befcb462c0ab6c752edd082cb52fb530a0",
  "_shrinkwrap": null,
  "_spec": "uuidv5@^1.0.0",
  "_where": "/srv/http/logopedia/node",
  "author": {
    "email": "download333@gmail.com",
    "name": "Erin Dachtler"
  },
  "bugs": {
    "url": "https://github.com/download13/uuidv5/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Generates named version 5 UUIDs",
  "devDependencies": {
    "mocha": "3.1.2"
  },
  "homepage": "https://github.com/download13/uuidv5",
  "keywords": [
    "guid",
    "sha1",
    "uuid",
    "v5"
  ],
  "license": "ISC",
  "main": "uuid.js",
  "name": "uuidv5",
  "optionalDependencies": {},
  "readme": "# UUIDv5\n\n## Install\n\n`npm install uuidv5`\n\n\n## Use\n\n`var uuidv5 = require('uuidv5');`\n\nIf you are unfamiliar with v5 UUIDs, read [this](http://en.wikipedia.org/wiki/Universally_unique_identifier#Version_5_.28SHA-1_hash.29). For a deeper look, read [RFC 4122](http://tools.ietf.org/html/rfc4122).\n\n\n## API\n\n### uuidv5(namespace, name, [raw_output])\n\n* `namespace` can be 'url', 'dns', 'oid', 'x500', or 'null'. If it's none of those, it must be a UUID to use as a namespace, either in string or Buffer form.\n* `name` can be a string or Buffer. What it should contain is namespace-dependent.\n* `raw_output` is an optional flag. If set to `true`, the UUID will be returned as a Buffer instead of as a string.\n\n### uuidv5.uuidToString(uuid)\n\nTakes a Buffer-form uuid and returns it as a string.\n\n### uuidv5.uuidFromString(uuidStr)\n\nTakes a UUID as a string (with or without dashes [-]) and returns it as a Buffer.\n\n\n### Examples\n\n```javascript\nvar uuidv5 = require('uuidv5');\n\n// Generate a UUID in the default URL namespace\nvar urlUUID = uuidv5('url', 'http://google.com/page');\n\n// Default DNS namespace\nvar dnsUUID = uuidv5('dns', 'google.com');\n\n// Create your own namespace\nvar privns = uuidv5('null', 'my-private-namespace', true); // Buffer form is more efficient\nvar privUUID = uuidv5(privns, 'some-named-thing');\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/download13/uuidv5.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
